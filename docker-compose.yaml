version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db:/var/lib/postgresql/data

  webserver:
    build: .
    ports:
      - "8080:8080"
    environment:
      # Folosim LocalExecutor pentru simplitate local
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      # Dacă e nevoie de legătura la Cloud Storage / Cloud SQL:
      # GOOGLE_APPLICATION_CREDENTIALS: /opt/airflow/keys/gcp-sa.json
    volumes:
      # Pentru dezvoltare rapidă montezi codul local:
      - ./dags:/opt/airflow/dags:ro
      - ./scripts:/opt/airflow/scripts:ro
      - ./data:/opt/airflow/data:ro
      # - ./keys:/opt/airflow/keys:ro    # GCP service-account
    depends_on:
      - postgres
    command: >-
      bash -c "airflow db init &&
               airflow users create --username admin --password admin \
                                    --firstname Admin --lastname User \
                                    --role Admin --email admin@example.com &&
               airflow webserver"

  scheduler:
    build: .
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags:ro
      - ./scripts:/opt/airflow/scripts:ro
      - ./data:/opt/airflow/data:ro
    command: airflow scheduler

volumes:
  postgres-db:
